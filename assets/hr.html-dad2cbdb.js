import{_ as a,W as e,X as i,a2 as h}from"./framework-a9f5de78.js";const r={},d=h('<p>哈喽大家好，我是阿Q！</p><p>正所谓金三银四，金九银十，想要换工作的朋友得抓紧这个时间，要是错过了，很多公司就没有 HC 了。</p><p>这不，出去面试的Z同学回来了，正在跟其他同学口吐莲花、舌绽春蕾。</p><p>“气死我了，你说我出去面试面了个寂寞，我都做好和面试官好好掰扯一下高并发、高可用和分布式的知识点的打算了，再不济对线一下 Spring、MySQL、JVM 的八股文也行呀，怎么就在和 HR 聊天的时候被 pass 了呢？”</p><p>屏幕前的你是不是也遇到过这样的情景？还没见到真正的面试官就被 HR 中途给淘汰了。很多大厂一般会有 3-5 轮的面试，第一轮很可能不是技术面，而是 HR 的初面，所以每轮面试我们都要做好准备。</p><p>千万不要一面技术就从容不破、娓娓道来，一跟 HR 对线就手忙脚乱、心乱如麻。</p><p>那重点来了，除了技术准备外，我们要在哪几个方面<strong>包装</strong>一下自己呢？</p><h2 id="简历" tabindex="-1"><a class="header-anchor" href="#简历" aria-hidden="true">#</a> 简历</h2><p>相信大家都写过不少的简历了，那简历应该如何书写才能让 HR 一眼叨中呢？</p><h3 id="个人介绍" tabindex="-1"><a class="header-anchor" href="#个人介绍" aria-hidden="true">#</a> 个人介绍</h3><p>个人介绍没有太多的花里胡哨，只需要将自己的个人信息简单清晰的进行罗列就好。当然，如果你平时有书写博客或者提交 github 的习惯，那这将成为你的加分项。</p><h3 id="工作经历" tabindex="-1"><a class="header-anchor" href="#工作经历" aria-hidden="true">#</a> 工作经历</h3><p>简历不应该是工作编年史，你应该只列举那些能给别人留下深刻印象的工作经验。</p><p>在描述工作经历时、请尽量采用这样的格式：“使用 Y 实现了 X，从而达到了 Z效果”，比如下面这个例子：</p><ul><li><p>通过实施分布式缓存功能减少了 75% 的对象染时间，从而使得用户登录速度加快10%；</p></li><li><p>实现了一种新的基于 windiff 的比较算法，系统平均匹配精度由1.2提升至1.5；</p></li></ul><p>尽管不是所有经历都能套用此句型，但模式无非是描述做过什么，如何完成，结果如何。理想的做法是尽可能地量化结果。</p><h3 id="项目经历" tabindex="-1"><a class="header-anchor" href="#项目经历" aria-hidden="true">#</a> 项目经历</h3><p>项目不要列太多，很多求职者都犯过这样的错误，在简历上一股脑儿列出先前做过的13个项目，效果反而不佳。</p><p>简历上应该只列举2到4个相对重要的项目，然后对项目进行简明扼要的描述，并且有能力同面试官深入探讨相关的技术细节。项目描述的内容可以参考以下几点：</p><ul><li>项目的整体架构，最好能画出架构图；</li><li>项目完成后产生的价值：比如服务对象、阶段性数据、用户量等；</li><li>使用了哪些牛X的技术或者有哪个功能实现的比较巧妙；</li><li>个人在项目中担任的角色以及项目带给个人的成长；</li><li>遇到的挑战，犯过的错误，做出的技术决策等；</li><li>还可以说一下你准备的高并发、高性能、分布式的知识点；</li></ul><p>总之，只要是你准备好的知识点都可以往项目上靠拢。</p><h3 id="技术介绍" tabindex="-1"><a class="header-anchor" href="#技术介绍" aria-hidden="true">#</a> 技术介绍</h3><p>要写清楚自己掌握的知识点以及熟练程度，对不懂得知识千万不要往上写，因为面试官很可能会顺着你掌握的技术往下问。</p><p>在写技术时要将知识点进行概括分类，千万不要东一榔头西一棒槌，让面试官觉得你不专业。</p><h2 id="软实力" tabindex="-1"><a class="header-anchor" href="#软实力" aria-hidden="true">#</a> 软实力</h2><h3 id="自我介绍" tabindex="-1"><a class="header-anchor" href="#自我介绍" aria-hidden="true">#</a> 自我介绍</h3><p>许多面试官在面试开始时会先让你做个自我介绍，或者过一遍你的简历，这本质上是自我推介机会，是你给面试官的第一印象。因此，务必好好利用这个机会。</p><p>可以按照时间顺序来组织自我介绍的内容，这种结构适合很多人：开头描述目前所从事的工作，结尾处提及工作之余培养的兴趣爱好。</p><ul><li>在描述时可以提及之前的上司把你招进了他的团队，说明你获得了领导的认可；</li><li>提及研发的成果，如搭建了具有良好可扩展性的系统，说明你技术上能力够硬；</li><li>工作之余与开发相关的兴趣，如参与开源项目的开发，书写自己的博客，说明你善于总结，努力上进；</li><li>渴望加入贵公司，要契合公司的文化，符合自己的价值观；</li></ul><h3 id="你有哪些缺点" tabindex="-1"><a class="header-anchor" href="#你有哪些缺点" aria-hidden="true">#</a> 你有哪些缺点</h3><p>在问及自己有哪些缺点时，要说出具体缺点。像“我最大的缺点就是工作太努力了”这样的回答，反而会显得你傲慢自大，并且不愿正视自己的不足。</p><p>因此，你应该提到真实、合乎情理的缺点，然后话锋一转，强调自己是如何克服这个缺点的，比如:“有时候，我对细节不够重视。好的一面是我反应迅速，执行力强，但不免会因为粗心大意而犯错。有鉴于此，我总是会找其他同事帮忙检查自己的工作，确保不出问题。”</p><h3 id="应该问面试官哪些问题" tabindex="-1"><a class="header-anchor" href="#应该问面试官哪些问题" aria-hidden="true">#</a> 应该问面试官哪些问题</h3><p>大多数面试官会给你提问的机会，有意无意间，提问的质量会成为面试官的一个评估因素。所以，请事先准备好问题。可以从以下3 个方面来着手：</p><h4 id="真实的问题" tabindex="-1"><a class="header-anchor" href="#真实的问题" aria-hidden="true">#</a> 真实的问题</h4><p>真实的问题就是你真的想知道答案的问题。比如整个团队中，测试人员、开发人员和项目经理的比例是多少？他们是如何配合的？团队怎么做项目规划？这些问题有助于你了解公司的日常工作情况。</p><h4 id="有见地的问题" tabindex="-1"><a class="header-anchor" href="#有见地的问题" aria-hidden="true">#</a> 有见地的问题</h4><p>有见地的问题可以充分反映出你的知识水平和技术功底。</p><ul><li><p>我注意到你们使用了 X 技术，请问你们是如何处理 Y 问题的？</p></li><li><p>为什么你们的产品选择使用 X 协议而不是 Y 协议？据我所知，虽然 X 有A、B、C等几大好处，但因为存在 D问题，很多公司并未采用该协议。</p></li></ul><p>只有事先对该公司做过充分调研，才问得出这类有深度的问题。</p><h4 id="富有激情的问题" tabindex="-1"><a class="header-anchor" href="#富有激情的问题" aria-hidden="true">#</a> 富有激情的问题</h4><p>富有激情的问题旨在展示你对技术的热忱。要让面试官知道你热衷学习，将来能为公司的发展做出巨大贡献。</p><ul><li>我对可扩展性很感兴趣，想要了解更多。有哪些机会可以学习这方面的知识？</li><li>我对 X 技术不是太熟悉，不过它听上去是个不错的解决方案。您能给我多讲讲它的工作原理吗?</li></ul>',43),p=[d];function l(n,t){return e(),i("div",null,p)}const c=a(r,[["render",l],["__file","hr.html.vue"]]);export{c as default};
