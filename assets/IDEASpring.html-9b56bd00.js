import{_ as i,W as t,X as p,Y as e,Z as n,a0 as c,a2 as a,C as s}from"./framework-a9f5de78.js";const d={},l=e("p",null,[n("春节期间，有小伙伴私信我说想要研究下"),e("code",null,"Spring"),n("的源码，想让我出一期教程来实现"),e("code",null,"IDEA"),n("导入"),e("code",null,"Spring"),n("源码，今天它来了~")],-1),r=e("blockquote",null,[e("p",null,"版本 ：IDEA 2020.2.3 ；Spring 5.0.x ；gradle 4.4.1 ；")],-1),u={href:"https://github.com/spring-projects/spring-framework",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"github",-1),f=e("code",null,"spring",-1),b=a('<figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d1ca05056cd4774beef6805f9964e05~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>切记：解压完成后不要直接用<code>IDEA</code> 打开，因为<code>Spring</code> 的源码是用 <code>gradle</code> 构建的。如果已经用<code>IDEA</code> 打开了请<strong>删除</strong>后重新解压。</p></blockquote><p>我们找到文件夹</p><p><code>spring-framework-5.0.x\\gradle\\wrapper</code></p>',4),m=e("code",null,"gradle-wrapper.properties",-1),v=e("code",null,"gradle",-1),k={href:"https://gradle.org/",target:"_blank",rel:"noopener noreferrer"},_=a(`<figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/235245a49c23477cb5c7cdb5090969d4~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35ca1d6371b04d05b6e30b8a21b02b09~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下载完成之后把 <code>gradle</code> 的环境变量配置一下，可以用<code>gradle -version</code> 来验证 <code>gradle</code> 是否配置成功</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/91a1c00198cf4f5b96b5dd6948d8ff98~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在 <code>USER_HOME/.gradle/</code> 下面新建 <code>init.gradle</code> 文件，将国外源换成国内镜像</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>allprojects <span class="token punctuation">{</span>
 repositories <span class="token punctuation">{</span>
     def REPOSITORY_URL = &#39;http<span class="token punctuation">:</span>//maven.aliyun.com/nexus/content/groups/public/&#39;
  all <span class="token punctuation">{</span> ArtifactRepository repo <span class="token punctuation">-</span><span class="token punctuation">&gt;</span><span class="token scalar string">
      if(repo instanceof MavenArtifactRepository){
       def url = repo.url.toString()</span>
    if(url.startsWith(&#39;https<span class="token punctuation">:</span>//repo1.maven.org/maven2/&#39;)<span class="token punctuation">|</span><span class="token punctuation">|</span>url.startsWith(&#39;https<span class="token punctuation">:</span>//jcenter.bintray.com/&#39;))<span class="token punctuation">{</span>
        project.logger.lifecycle &quot;Repository $<span class="token punctuation">{</span>repo.url<span class="token punctuation">}</span> replaced by $REPOSITORY_URL.&quot;
     remove repo
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
  maven <span class="token punctuation">{</span>
   url REPOSITORY_URL
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>spring-framework-5.0.x</code> 下打开<code>git</code> 的窗口执行以下命令</p><p><code>./gradlew :spring-oxm:compileTestJava</code></p><p>该命令的作用是将 <code>spring</code> 转成<code>IDEA</code> 可以导入的工程结构。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8eb1d8753ddb4fb5b605f8fc1773c9ef~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>如果你新开的 <code>Windows</code> 的 <code>dos</code> 窗口，先进入源码的目录文件夹，执行命令不用加前面的<code>./</code></p></blockquote><p>配置 <code>IDEA</code> 中的 <code>gradle</code></p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e40574434b2415fa68a94e5548c2a20~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用 <code>File -&gt; open</code> 把 <code>Spring</code> 工程导入到 <code>IDEA</code> 中，并等待 <code>jar</code> 下载完成。</p><p>如遇报错信息： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/abad097dad7f461cb9d92bed33744040~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p><p>在 <code>build.gradle</code> 中添加</p><p><code>maven { url &quot;http://maven.aliyun.com/nexus/content/groups/public&quot;}</code></p><p>其目的就是为了换成国内的镜像（<code>init.gradle</code> 有时没有生效）</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6322ab637919479ba483bf5e89887d24~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>编译时报错如下：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07129f1e33ad4bd985c4afdf188fcb9e~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>原因是 <code>gradle</code> 和 <code>gradle</code> 插件版本过旧，更换更高的版本可以解决，但这个问题只是提示，不影响编译。</p><p>在 <code>test</code> 包中随便找了一个单元测试运行，成功运行</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0212c002ffee450fb72e67d033eb2220~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,24);function h(y,j){const o=s("ExternalLinkIcon");return t(),p("div",null,[l,r,e("p",null,[n("先从"),e("a",u,[g,c(o)]),n("上面把 "),f,n(" 源码下载下来并解压：")]),b,e("p",null,[n("下的 "),m,n(" 文件，查看里边的 "),v,n(" 版本，去"),e("a",k,[n("官网"),c(o)]),n("下载。")]),_])}const z=i(d,[["render",h],["__file","IDEASpring.html.vue"]]);export{z as default};
