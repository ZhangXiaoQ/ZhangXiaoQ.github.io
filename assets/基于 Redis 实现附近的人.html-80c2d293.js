import{_ as n,W as s,X as a,a2 as t}from"./framework-a9f5de78.js";const p={},e=t(`<p>前几天收到一个新的需求，需要实现类似“附近的人”的功能：根据自己当前的定位，获取距离范围内的所有任务地点。</p><p>刚看到这个需求时有点懵逼，第一想到的就是要利用地球的半径公式去计算距离，也就是把地球想成一个球体，去计算球上两点之间的距离。</p><p>可想而知，这样的方法效率会比较低，每条数据都要来与本人的坐标做计算，太过繁琐。经过大佬的指点，想到了用 redis 自带的 GEO 来实现此功能。</p><h2 id="实战演习" tabindex="-1"><a class="header-anchor" href="#实战演习" aria-hidden="true">#</a> 实战演习</h2><p>以下是给大家准备的sql脚本</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> NAMES utf8mb4<span class="token punctuation">;</span>
<span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- Table structure for job_base_info</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>job_base_info<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>job_base_info<span class="token punctuation">\`</span></span>  <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>job_id<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;任务ID&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>job_name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;任务名称&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>job_location<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;任务地点位置经纬度-逗号隔开&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>job_detail_address<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;任务详细地点位置&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>job_id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">24</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">=</span> utf8 <span class="token keyword">COLLATE</span> <span class="token operator">=</span> utf8_general_ci <span class="token keyword">COMMENT</span> <span class="token operator">=</span> <span class="token string">&#39;工作任务详情基础信息表&#39;</span> ROW_FORMAT <span class="token operator">=</span> DYNAMIC<span class="token punctuation">;</span>

<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- Records of job_base_info</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>job_base_info<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;软件开发&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;120.433576,36.139697&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;青岛市崂山区海尔路1号&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>job_base_info<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;儿童摄影&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;120.420297,36.156589&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;山东省青岛市李沧区书院路188号&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>job_base_info<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;清洁家用电器&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;120.025706,36.281478&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;山东省青岛市胶州市福州支路232号东60米&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>job_base_info<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;辩论学习&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;120.505042,36.171247&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;松岭路238号中国海洋大学内&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SET</span> FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>废话不多说，让我们来看看具体的实现</p><p>（1）我们要在程序启动时，将数据库中的任务数据的坐标信息初始化到 redis 中（此处暂且忽略任务的增删改查对 redis 中数据的影响）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostConstruct</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//首先要删除该key的所有值</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;company-task&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JobBaseInfo</span><span class="token punctuation">&gt;</span></span> jobBaseInfoList <span class="token operator">=</span> jobBaseInfoMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    jobBaseInfoList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> jobLocation <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getJobLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>jobLocation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> jobLocation<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comp
            <span class="token keyword">if</span><span class="token punctuation">(</span>split<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//Point(经度, 纬度) </span>
                <span class="token class-name">Point</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//将经纬度数据及其id存到key为“company-task”中</span>
                redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;company-task&quot;</span><span class="token punctuation">,</span>point<span class="token punctuation">,</span>item<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）查询当前坐标下 3km 范围内的任务地点（外加根据任务名搜索的联合查询）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JobBaseInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectJobList</span><span class="token punctuation">(</span><span class="token class-name">JobBaseInfoDTO</span> jobBaseInfoDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> jobLocation <span class="token operator">=</span> jobBaseInfoDTO<span class="token punctuation">.</span><span class="token function">getJobLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//距离</span>
    <span class="token class-name">Double</span> distance <span class="token operator">=</span> jobBaseInfoDTO<span class="token punctuation">.</span><span class="token function">getDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> idList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>jobLocation<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> jobLocation<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>split<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//Point(经度, 纬度) Distance(距离量, 距离单位)</span>
            <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                       <span class="token keyword">new</span> <span class="token class-name">Distance</span><span class="token punctuation">(</span>distance<span class="token punctuation">,</span> <span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//params: key, Circle 获取存储到redis中的distance范围内的所有任务地点数据</span>
            <span class="token class-name">GeoResults</span> radius <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token string">&quot;company-task&quot;</span><span class="token punctuation">,</span> circle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GeoResult</span><span class="token punctuation">&gt;</span></span> contentList <span class="token operator">=</span> radius<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>contentList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                contentList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                    <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span> content <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">)</span> item<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    idList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> content<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    jobBaseInfoDTO<span class="token punctuation">.</span><span class="token function">setIdList</span><span class="token punctuation">(</span>idList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> jobBaseInfoMapper<span class="token punctuation">.</span><span class="token function">selectJobList</span><span class="token punctuation">(</span>jobBaseInfoDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>selectJobList(jobBaseInfoDTO)</code>方法的sql如下</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;selectJobList&quot;</span> resultType<span class="token operator">=</span><span class="token string">&quot;com.itzyq.redislikes.model.entity.JobBaseInfo&quot;</span><span class="token operator">&gt;</span>
	<span class="token keyword">select</span>
	<span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">&quot;Base_Column_List&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>
	<span class="token keyword">from</span> job_base_info
	<span class="token operator">&lt;</span><span class="token keyword">where</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;jobName!=null and jobName!=&#39;&#39;&quot;</span><span class="token operator">&gt;</span>
			<span class="token operator">and</span> job_name <span class="token operator">like</span> CONCAT<span class="token punctuation">(</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">,</span><span class="token comment">#{jobName},&quot;%&quot;)</span>
		<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>

		<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;idList!=null and idList.size &gt; 0 &quot;</span><span class="token operator">&gt;</span>
			<span class="token operator">and</span> job_id <span class="token operator">in</span>
			<span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;idList&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;id&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
				<span class="token comment">#{id}</span>
			<span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">where</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这儿我们就已经实现了“附近的人”的功能了，接下来就让我们具体的了解一下Redis中的GEO都有哪些骚操作吧。<strong>微信公众号回复“pSearch”获取源码呦！</strong></p><h2 id="geo操作" tabindex="-1"><a class="header-anchor" href="#geo操作" aria-hidden="true">#</a> GEO操作</h2><p>Redis GEO 主要用于存储地理位置信息，并对存储的信息进行操作，该功能在 Redis 3.2 版本新增，GEO 是基于zset的一种扩展数据格式。Redis GEO 操作方法有：</p><ul><li>geoadd：添加地理位置的坐标。</li><li>geopos：获取地理位置的坐标。</li><li>geodist：计算两个位置之间的距离。</li><li>georadius：根据用户给定的经纬度坐标来获取指定范围内的地理位置集合。</li><li>georadiusbymember：根据储存在位置集合里面的某个地点获取指定范围内的地理位置集合。</li><li>geohash：返回一个或多个位置对象的 geohash 值。</li></ul><h3 id="geoadd" tabindex="-1"><a class="header-anchor" href="#geoadd" aria-hidden="true">#</a> geoadd</h3><p>geoadd 用于存储指定的地理空间位置，可以将一个或多个经度(longitude)、纬度(latitude)、位置名称(member)添加到指定的 key 中。</p><p>geoadd 语法格式如下：</p><div class="language-redis line-numbers-mode" data-ext="redis"><pre class="language-redis"><code>GEOADD key longitude latitude member [longitude latitude member ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下实例中 key 为 Sicily，Palermo 和 Catania 为位置名称 ：</p><p><strong>实例</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">GEOADD</span> <span class="token class-name">Sicily</span> <span class="token number">13.361389</span> <span class="token number">38.115556</span> <span class="token string">&quot;Palermo&quot;</span> <span class="token number">15.087269</span> <span class="token number">37.502669</span> <span class="token string">&quot;Catania&quot;</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a2b2236209164a538086e39f92993ecc~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="geopos" tabindex="-1"><a class="header-anchor" href="#geopos" aria-hidden="true">#</a> geopos</h3><p>geopos 用于从给定的 key 里返回所有指定名称(member)的位置（经度和纬度），不存在的返回 nil。</p><p>geopos 语法格式如下：</p><div class="language-redis line-numbers-mode" data-ext="redis"><pre class="language-redis"><code>GEOPOS key member [member ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实例</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">GEOPOS</span> <span class="token class-name">Sicily</span> <span class="token class-name">Palermo</span> <span class="token class-name">Catania</span> <span class="token class-name">NonExisting</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;13.36138933897018433&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;38.11555639549629859&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;15.08726745843887329&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;37.50266842333162032&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>nil<span class="token punctuation">)</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：也可以使用zrange返回所有的位置元素而不带经纬度信息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">ZRANGE</span> <span class="token class-name">Sicily</span> <span class="token number">0</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token number">1</span><span class="token punctuation">)</span>  <span class="token string">&quot;Palermo&quot;</span>
 <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token string">&quot;Catania&quot;</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="geodist" tabindex="-1"><a class="header-anchor" href="#geodist" aria-hidden="true">#</a> geodist</h3><p>geodist 用于返回两个给定位置之间的距离。</p><p>geodist 语法格式如下：</p><div class="language-redis line-numbers-mode" data-ext="redis"><pre class="language-redis"><code>GEODIST key member1 member2 [m|km|ft|mi]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>member1 member2 为两个地理位置。</p><p>最后一个距离单位参数说明：</p><ul><li>m ：米，默认单位。</li><li>km ：千米。</li><li>mi ：英里。</li><li>ft ：英尺。</li></ul><p><strong>实例: 计算 Palermo 与 Catania 之间的距离</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">GEODIST</span> <span class="token class-name">Sicily</span> <span class="token class-name">Palermo</span> <span class="token class-name">Catania</span>
<span class="token string">&quot;166274.1516&quot;</span>
redis<span class="token operator">&gt;</span> <span class="token constant">GEODIST</span> <span class="token class-name">Sicily</span> <span class="token class-name">Palermo</span> <span class="token class-name">Catania</span> km
<span class="token string">&quot;166.2742&quot;</span>
redis<span class="token operator">&gt;</span> <span class="token constant">GEODIST</span> <span class="token class-name">Sicily</span> <span class="token class-name">Palermo</span> <span class="token class-name">Catania</span> mi
<span class="token string">&quot;103.3182&quot;</span>
redis<span class="token operator">&gt;</span> <span class="token constant">GEODIST</span> <span class="token class-name">Sicily</span> <span class="token class-name">Foo</span> <span class="token class-name">Bar</span>
<span class="token punctuation">(</span>nil<span class="token punctuation">)</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="georadius、georadiusbymember" tabindex="-1"><a class="header-anchor" href="#georadius、georadiusbymember" aria-hidden="true">#</a> georadius、georadiusbymember</h3><p>georadius 以给定的经纬度为中心， 返回键包含的位置元素当中， 与中心的距离不超过给定最大距离的所有位置元素。</p><p>georadiusbymember 和 GEORADIUS 命令一样， 都可以找出位于指定范围内的元素， 但是 georadiusbymember 的中心点是由给定的位置元素决定的， 而不是使用经度和纬度来决定中心点。</p><p>georadius 与 georadiusbymember 语法格式如下：</p><div class="language-redis line-numbers-mode" data-ext="redis"><pre class="language-redis"><code>GEORADIUS key longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]
GEORADIUSBYMEMBER key member radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明：</p><ul><li>m ：米，默认单位。</li><li>km ：千米。</li><li>mi ：英里。</li><li>ft ：英尺。</li><li>WITHDIST: 在返回位置元素的同时， 将位置元素与中心之间的距离也一并返回。</li><li>WITHCOORD: 将位置元素的经度和维度也一并返回。</li><li>WITHHASH: 以 52 位有符号整数的形式， 返回位置元素经过原始 geohash 编码的有序集合分值。 这个选项主要用于底层应用或者调试， 实际中的作用并不大。</li><li>COUNT 限定返回的记录数。</li><li>ASC: 查找结果根据距离从近到远排序。</li><li>DESC: 查找结果根据从远到近排序。</li></ul><p><strong>georadius 实例</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">GEORADIUS</span> <span class="token class-name">Sicily</span> <span class="token number">15</span> <span class="token number">37</span> <span class="token number">200</span> km <span class="token class-name">WITHDIST</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Palermo&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;190.4424&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Catania&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;56.4413&quot;</span>
redis<span class="token operator">&gt;</span> <span class="token constant">GEORADIUS</span> <span class="token class-name">Sicily</span> <span class="token number">15</span> <span class="token number">37</span> <span class="token number">200</span> km <span class="token class-name">WITHCOORD</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Palermo&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;13.36138933897018433&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;38.11555639549629859&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Catania&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;15.08726745843887329&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;37.50266842333162032&quot;</span>
redis<span class="token operator">&gt;</span> <span class="token constant">GEORADIUS</span> <span class="token class-name">Sicily</span> <span class="token number">15</span> <span class="token number">37</span> <span class="token number">200</span> km <span class="token constant">WITHDIST</span> <span class="token class-name">WITHCOORD</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Palermo&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;190.4424&quot;</span>
  <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;13.36138933897018433&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;38.11555639549629859&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Catania&quot;</span>
  <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;56.4413&quot;</span>
  <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;15.08726745843887329&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;37.50266842333162032&quot;</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>georadiusbymember 实例：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">GEOADD</span> <span class="token class-name">Sicily</span> <span class="token number">13.583333</span> <span class="token number">37.316667</span> <span class="token string">&quot;Agrigento&quot;</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
redis<span class="token operator">&gt;</span> <span class="token constant">GEORADIUSBYMEMBER</span> <span class="token class-name">Sicily</span> <span class="token class-name">Agrigento</span> <span class="token number">100</span> km
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;Agrigento&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;Palermo&quot;</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="geohash" tabindex="-1"><a class="header-anchor" href="#geohash" aria-hidden="true">#</a> geohash</h3><p>Redis GEO 使用 geohash 来保存地理位置的坐标。geohash 用于获取一个或多个位置元素的 geohash 值。</p><p>geohash 语法格式如下：</p><div class="language-redis line-numbers-mode" data-ext="redis"><pre class="language-redis"><code>GEOHASH key member [member ...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">GEOHASH</span> <span class="token class-name">Sicily</span> <span class="token class-name">Palermo</span> <span class="token class-name">Catania</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;sqc8b49rny0&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;sqdtr74hyu0&quot;</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>geo并没有提供删除指令，但根据其底层是zset实现，我们可以使用zrem对数据进行删除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>redis<span class="token operator">&gt;</span> <span class="token constant">ZREM</span> <span class="token class-name">Sicily</span> <span class="token class-name">Agrigento</span>
<span class="token string">&quot;1&quot;</span>
redis<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis-geo-java-api" tabindex="-1"><a class="header-anchor" href="#redis-geo-java-api" aria-hidden="true">#</a> Redis GEO JAVA API</h2><p>有了以上 GEO 的操作，我们可以在 java 中找到对应的 api</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 *  将指定的地理空间位置（纬度、经度、名称）添加到指定的key中。
 */</span>
<span class="token comment">//params: key, Point(经度, 纬度), 地方名称</span>
<span class="token class-name">Long</span> addedNum <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Sicily&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">13.361389</span><span class="token punctuation">,</span><span class="token number">38.115556</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Palermo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 *  从key里返回所有给定位置元素的位置（经度和纬度）。
 */</span>
<span class="token comment">//params: key, 地方名称...</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> points <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token string">&quot;Sicily&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Palermo&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Catania&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 *  返回两个给定位置之间的距离。
 */</span>
<span class="token comment">//params: key, 地方名称1, 地方名称2, 距离单位</span>
<span class="token class-name">Distance</span> distance <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span><span class="token string">&quot;Sicily&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Palermo&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Catania&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>DistanceUnit</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 以给定的经纬度为中心， 返回键包含的位置元素当中， 与中心的距离不超过给定最大距离的所有位置元素，并给出所有位置元素与中心的平均距离。
 */</span>
<span class="token comment">//Point(经度, 纬度) Distance(距离量, 距离单位)</span>
<span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">13.361389</span><span class="token punctuation">,</span><span class="token number">38.115556</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Distance</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span> args <span class="token operator">=</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span><span class="token punctuation">.</span><span class="token function">newGeoRadiusArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
    <span class="token comment">//包含距离，包含经纬度，升序前五个</span>
    <span class="token function">includeDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includeCoordinates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortAscending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//params: key, Circle, GeoRadiusCommandArgs</span>
<span class="token class-name">GeoResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token string">&quot;Sicily&quot;</span><span class="token punctuation">,</span>circle<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 *  以给定的城市为中心， 返回键包含的位置元素当中， 与中心的距离不超过给定最大距离的所有位置元素，并给出所有位置元素与中心的平均距离。
 */</span>
<span class="token comment">//params: 距离量, 距离单位</span>
<span class="token class-name">Distance</span> distance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Distance</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span> args <span class="token operator">=</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span><span class="token punctuation">.</span><span class="token function">newGeoRadiusArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">includeDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includeCoordinates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortAscending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//params: key, 地方名称, Circle, GeoRadiusCommandArgs</span>
<span class="token class-name">GeoResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>  results <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token string">&quot;Sicily&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Palermo&quot;</span><span class="token punctuation">,</span>distance<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
     

<span class="token doc-comment comment">/**
 *  返回一个或多个位置元素的 Geohash 表示
 */</span>
<span class="token comment">//params: key, 地方名称...</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token string">&quot;Sicily&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Palermo&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Catania&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,64),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","基于 Redis 实现附近的人.html.vue"]]);export{k as default};
