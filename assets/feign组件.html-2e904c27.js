import{_ as o,W as p,X as c,Y as n,Z as s,a0 as t,a2 as e,C as i}from"./framework-a9f5de78.js";const l={},u=n("h2",{id:"一、此组件解决了什么问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、此组件解决了什么问题","aria-hidden":"true"},"#"),s(" 一、此组件解决了什么问题")],-1),r={id:"_1、集成官方的openfeign-starter",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#_1、集成官方的openfeign-starter","aria-hidden":"true"},"#",-1),k={href:"http://gfcoe.qingdao.gongfuqd.com/java/components/docs/feign-spring-boot-starter.html#_1%E3%80%81%E9%9B%86%E6%88%90%E5%AE%98%E6%96%B9%E7%9A%84openfeign-starter",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"有针对性的简单封装了官方open feign starter，简化客户端使用",-1),m={id:"_2、解决本地测试feign调用问题",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#_2、解决本地测试feign调用问题","aria-hidden":"true"},"#",-1),h={href:"http://gfcoe.qingdao.gongfuqd.com/java/components/docs/feign-spring-boot-starter.html#_2%E3%80%81%E8%A7%A3%E5%86%B3%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95feign%E8%B0%83%E7%94%A8%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"微服务之间调用的时候，由于pass平台上注册到nacos上的是172的docker内网地址，本地服务访问开发环境或者测试环境的微服务会失败，通过该组件，可以方便的手动指定远端地址，实现正常的feign调用自测。",-1),b=n("p",null,[n("img",{src:"https://hd-oss.cosmoplat.com/hdCosmo58:gfcoe/public/2023/01/17/006645e7-6a1e-4470-9679-c696168dacb0.png",alt:"注册到nacos上的都是内网172地址",loading:"lazy"}),s("注册到nacos上的都是内网172地址")],-1),_={id:"_3、解决feignclient配置冗余的问题",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#_3、解决feignclient配置冗余的问题","aria-hidden":"true"},"#",-1),y={href:"http://gfcoe.qingdao.gongfuqd.com/java/components/docs/feign-spring-boot-starter.html#_3%E3%80%81%E8%A7%A3%E5%86%B3feignclient%E9%85%8D%E7%BD%AE%E5%86%97%E4%BD%99%E7%9A%84%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},q=e(`<p>每个Feign客户端的配置如下所示</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;user-service&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserApi</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/detail&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">UserInfo</span> <span class="token function">userDetail</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上每个微服务暴露出来的接口FeignClient都是一样的，统一在一个地方配置就好。</p><p>此功能待开发</p>`,4),C={id:"二、使用方式",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#二、使用方式","aria-hidden":"true"},"#",-1),A={href:"http://gfcoe.qingdao.gongfuqd.com/java/components/docs/feign-spring-boot-starter.html#%E4%BA%8C%E3%80%81%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},B=e(`<p>引入依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.cosmoplat.gfqd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>feign-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置文件中新增配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">manual</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">serviceIds</span><span class="token punctuation">:</span>
      <span class="token key atrule">serviceA</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//www.google.com
      <span class="token key atrule">serviceB</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//www.baidu.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>enabled为true时serviceIds配置生效；enabled为false时serviceIds配置失效，走原生的feign starter逻辑。</p>`,5),F={href:"https://hd-oss.cosmoplat.com/hdCosmo58:gfcoe/public/2023/02/02/6b39487b-8766-42dd-85ca-96c9664e8c62.mp4",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,"feign manual开关关闭，走服务发现逻辑，feign调用失败",-1),I={href:"https://hd-oss.cosmoplat.com/hdCosmo58:gfcoe/public/2023/02/02/3e32a975-1ac0-4298-b6df-b0b55654ddc7.mp4",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,"feign manual开关打开，不走服务发现逻辑，feign调用成功",-1),D=n("p",null,"相关信息",-1),R={href:"http://gfcoe.qingdao.gongfuqd.com/java/archetype/docs/gateway/inner-gateway-archetype.html",target:"_blank",rel:"noopener noreferrer"},S=e(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">manual</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">serviceIds</span><span class="token punctuation">:</span>
      <span class="token key atrule">icp-portal-bms</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//10.206.65.136<span class="token punctuation">:</span>27424/icp<span class="token punctuation">-</span>portal<span class="token punctuation">-</span>bms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的地址<code>http://10.206.65.136:27424/icp-portal-bms</code>分为两部分，<code>http://10.206.65.136:27424</code>是网关地址和端口号，<code>icp-portal-bms</code>是服务名</p>`,2),V={id:"三、实现原理",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#三、实现原理","aria-hidden":"true"},"#",-1),L={href:"http://gfcoe.qingdao.gongfuqd.com/java/components/docs/feign-spring-boot-starter.html#%E4%B8%89%E3%80%81%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"feign.manual.enabled",-1),z={href:"https://docs.spring.io/spring-cloud-openfeign/docs/2.2.9.RELEASE/reference/html/#creating-feign-clients-manually",target:"_blank",rel:"noopener noreferrer"},O=e(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">FeignClientsConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">FooController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">FooClient</span> fooClient<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">FooClient</span> adminClient<span class="token punctuation">;</span>

        <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">FooController</span><span class="token punctuation">(</span><span class="token class-name">Decoder</span> decoder<span class="token punctuation">,</span> <span class="token class-name">Encoder</span> encoder<span class="token punctuation">,</span> <span class="token class-name">Client</span> client<span class="token punctuation">,</span> <span class="token class-name">Contract</span> contract<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>fooClient <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">client</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">encoder</span><span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">decoder</span><span class="token punctuation">(</span>decoder<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">contract</span><span class="token punctuation">(</span>contract<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">requestInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicAuthRequestInterceptor</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">FooClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;https://PROD-SVC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>adminClient <span class="token operator">=</span> <span class="token class-name">Feign</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">client</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">encoder</span><span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">decoder</span><span class="token punctuation">(</span>decoder<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">contract</span><span class="token punctuation">(</span>contract<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">requestInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicAuthRequestInterceptor</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">target</span><span class="token punctuation">(</span><span class="token class-name">FooClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;https://PROD-SVC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过替换手动创建Client过程中的某些组件，可以实现特定的功能</p><ul><li>通过指定DefaultClient实现默认的http调用；通过指定RibbonClient实现服务发现和负载均衡</li><li>通过指定拦截器实现拦截器应用</li><li>通过指定FeignBuilderCustomizer实现FeignBuilder定制化</li><li>......</li></ul><p>为了方便使用，参考了<code>org.springframework.cloud.openfeign.FeignClientsRegistrar</code>实现了指定包扫描、创建BeanDefinitions等功能，简化了部分开发。</p><p>流程图如下：</p><p><img src="https://hd-oss.cosmoplat.com/hdCosmo58:gfcoe/public/2023/01/17/273f6a51-85df-4226-9c9a-3c8271067d9a.png" alt="利用springboot扩展点实现手动注册" loading="lazy">利用springboot扩展点实现手动注册</p>`,6);function M(T,U){const a=i("ExternalLinkIcon");return p(),c("div",null,[u,n("h3",r,[d,s(),n("a",k,[s("#"),t(a)]),s("1、集成官方的openfeign starter")]),g,n("h3",m,[v,s(),n("a",h,[s("#"),t(a)]),s("2、解决本地测试feign调用问题")]),f,b,n("h3",_,[E,s(),n("a",y,[s("#"),t(a)]),s("3、解决FeignClient配置冗余的问题")]),q,n("h2",C,[w,s(),n("a",A,[s("#"),t(a)]),s("二、使用方式")]),B,n("p",null,[n("a",F,[s("feign manual开关关闭，走服务发现逻辑，feign调用失败"),t(a)])]),x,n("p",null,[n("a",I,[s("feign manual开关打开，不走服务发现逻辑，feign调用成功"),t(a)])]),j,D,n("p",null,[s("这里可配合"),n("a",R,[s("内部网关"),t(a)]),s("使用，方便本地自测")]),S,n("h2",V,[N,s(),n("a",L,[s("#"),t(a)]),s("三、实现原理")]),n("p",null,[s("当"),P,s("为true的时候，会触发手动手动创建FeignClient的流程，参考文档："),n("a",z,[s("https://docs.spring.io/spring-cloud-openfeign/docs/2.2.9.RELEASE/reference/html/#creating-feign-clients-manuallyopen in new window"),t(a)]),s(" 示例代码如下所示：")]),O])}const H=o(l,[["render",M],["__file","feign组件.html.vue"]]);export{H as default};
