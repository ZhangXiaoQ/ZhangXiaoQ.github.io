import{_ as e,W as o,X as p,Y as a,Z as n,a0 as c,a2 as s,C as l}from"./framework-a9f5de78.js";const i={},u=s('<p>故事会迟到，但他从不会缺席。今天的故事开始了，你准备好了吗？</p><h2 id="前奏" tabindex="-1"><a class="header-anchor" href="#前奏" aria-hidden="true">#</a> 前奏</h2><p>简单介绍一下我的老婆：集智慧与美貌于一身的女子——阿狸，一句“我们心有灵犀，不是吗？”让我瞬间“沦陷”。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f53a4569ce5d4ae59fed68d3e59eea47~tplv-k3u1fbpfcp-watermark.image" alt="0阿狸.jpg" tabindex="0" loading="lazy"><figcaption>0阿狸.jpg</figcaption></figure><p><strong>阿Q：</strong> 老婆，还记得往年过节的时候我都送过你什么礼物吗？</p><p><strong>阿狸：</strong> 当然记得呀：刚过的儿童节送了一排旺仔牛奶和一大包零食；<code>5·20</code>送了一款我喜欢的香水；女神节给我买了一个超好看的包包......</p><p><strong>阿Q：</strong> 这都是今年的，那去年的还记得吗？</p><p><strong>阿狸：</strong> 我想想哈：去年圣诞节买了个圣诞老人的蛋糕还有一双漂亮的高跟鞋；过生日的时候送了一束鲜花还有一个大红包；嗯......</p><p><strong>阿Q：</strong> 看看，看看想不起来了吧，我就知道时间久了就记不住了，我来给你说一下吧：巴拉巴拉（露出得意的表情）。</p><p><strong>阿狸：</strong> 哇塞，你真厉害，你是怎么做到的呢？</p><p><strong>阿Q：</strong> 哈哈，这就不得不说一下我用到的日志了，你可听好了。</p><h2 id="正题" tabindex="-1"><a class="header-anchor" href="#正题" aria-hidden="true">#</a> 正题</h2><h3 id="logback简介" tabindex="-1"><a class="header-anchor" href="#logback简介" aria-hidden="true">#</a> LogBack简介</h3><p><strong>阿Q：</strong> 我说的日志呢就跟咱们之前写过的日记一样，只不过它是用来记录操作系统事件的文件的集合。常见的日志框架呢有以下几种：</p><ul><li>JUL（Java Util Logging）</li><li>Logback</li><li>Log4j</li><li>Log4j2</li><li>JCL（Jakarta Commons Logging）</li><li>Slf4j（Simple Logging Facade For Java）</li></ul><p><strong>阿狸：</strong> 这么多框架，该使用那个好呢？</p><p><strong>阿Q：</strong> 我首推<code>Logback</code>日志框架：首先它配置比较简单，比较容易上手；其次配置比较灵活，能满足大部分项目的需求；最后性能比较好，可以异步存储日志。我觉得这也是它在市面上比较流行，项目中使用比较多的原因吧。</p><p><strong>阿狸：</strong> 哦哦，那我<code>pick</code>它。</p><p><strong>阿Q：</strong> <code>Logback</code>是通过<code>slf4j</code>的日志门面搭建的日志系统，门面与实现的关系了解一下。</p><figure><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d40df3e4da8a474399f4e5045c3b688f~tplv-k3u1fbpfcp-watermark.image" alt="0门面.png" tabindex="0" loading="lazy"><figcaption>0门面.png</figcaption></figure>',20),d={href:"http://logback.qos.ch",target:"_blank",rel:"noopener noreferrer"},r=s(`<ul><li>logback-core：其它两个模块的基础模块；</li><li>logback-classic：它是<code>log4j</code>的一个改良版本，同时它完整实现了<code>slf4j API</code>，你可以很方便地更换成其它日志框架（如<code>log4j</code>或者<code>JUL</code>）；</li><li>logback-access：访问模块与<code>Servlet</code>容器集成提供通过<code>Http</code>来访问日志的功能，可以轻松地在<code>logback</code>核心之上构建自己的模块。</li></ul><h4 id="logback组件之间的关系-可以大体了解下-实战篇更容易理解" tabindex="-1"><a class="header-anchor" href="#logback组件之间的关系-可以大体了解下-实战篇更容易理解" aria-hidden="true">#</a> <code>logback</code>组件之间的关系 <strong><s>可以大体了解下，实战篇更容易理解</s></strong>：</h4><ul><li><code>Logger</code>作为日志的记录器，把它关联到应用的对应的<code>context</code>上后，主要用于存放日志对象，也可以定义日志类型、级别；</li><li><code>Appender</code>主要用于指定日志输出的目的地，可以是控制台、文件、远程套接字服务器、<code>MySQL</code>、<code>PostreSQL</code>、 <code>Oracle</code>和其他数据库、 <code>JMS</code>和远程<code>UNIX Syslog</code>守护进程等；</li><li><code>Layout</code>负责把事件转换成字符串，格式化的日志信息的输出。在<code>logback</code>中<code>Layout</code>对象被封装在<code>encoder</code>中；</li><li><code>Logger Context</code>：各个<code>logger</code>都被关联到一个 <code>LoggerContext</code>，它负责制造<code>logger</code>，也负责以树结构排列各<code>logger</code>。其他所有<code>logger</code>也通过<code>org.slf4j.LoggerFactory</code> 类的静态方法<code>getLogger</code>取得。</li></ul><blockquote><p><code>Logger</code> 可以被分配的级别包括：<code>TRACE</code>、<code>DEBUG</code>、<code>INFO</code>、<code>WARN</code> 和 <code>ERROR</code>，定义于<code>ch.qos.logback.classic.Level</code>类。如果 <code>logger</code>没有被分配级别，那么它将从有被分配级别的最近的祖先那里继承级别。<code>root logger</code> 默认级别是 <code>DEBUG</code>。</p></blockquote><p>级别排序为： <code>TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR</code></p><h3 id="项目实战" tabindex="-1"><a class="header-anchor" href="#项目实战" aria-hidden="true">#</a> 项目实战</h3><p><strong>阿狸：</strong> 太啰嗦了，快点进入实战吧。</p><p><strong>阿Q：</strong> <code>OK</code>，如果你创建的是普通的<code>maven</code>项目，你需要引入<code>pom</code>文件：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- slf4j日志门面 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- logback日志实现 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ch.qos.logback<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>logback-classic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>logback</code>会从 <code>classpath</code> 下依次读取以下类型的配置文件：</p><ul><li>logback.groovy</li><li>logback-test.xml</li><li>logback.xml</li></ul><p>如果文件都不存在，<code>logback</code>用 <code>BasicConfigurator</code> 自动对自己进行配置，这会导致记录输出到控制台。</p><h4 id="基本信息配置" tabindex="-1"><a class="header-anchor" href="#基本信息配置" aria-hidden="true">#</a> 基本信息配置</h4><p>代码测试样例奉上：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestLogBack</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">TestLogBack</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">&quot;trace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先我们在<code>resources</code>下创建一个<code>logback.xml</code>,然后进行配置</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--
        配置集中管理属性
        我们可以直接改属性的 value 值
        格式：\${name}
     --&gt;</span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pattern<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %c %M %L [%thread] %m%n<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!--
        日志输出格式：
        %-5level 日志输出级别，占5位，靠左补全
        %d{yyyy-MM-dd HH:mm:ss.SSS} 时间
        %c 类的完整名称
        %M method
        %L 行号
        %thread 线程名称
        %m或者%msg 信息
        %n 换行
     --&gt;</span>

    <span class="token comment">&lt;!-- 控制台日志输出的 appender --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>console<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 控制输出流对象 默认 System.out  我们为了测试可以改为 System.err（项目中使用 System.out ） --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>System.err<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志消息格式配置 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.encoder.PatternLayoutEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>\${pattern}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>


    <span class="token comment">&lt;!-- 定义日志文件保存路径属性 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>log_dir<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/logs<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

    <span class="token comment">&lt;!-- 日志文件输出的 appender --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.FileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志文件保存路径 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>\${log_dir}/logback.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--  日志消息格式配置 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.encoder.PatternLayoutEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>\${pattern}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- html 格式文件输出的 appender --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>htmlFile<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.FileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志文件保存路径 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>\${log_dir}/logback.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- html消息格式配置 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.encoder.LayoutWrappingEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.html.HTMLLayout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--                &lt;pattern&gt;\${pattern}&lt;/pattern&gt;--&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%-5level%d{yyyy-MM-dd HH:mm:ss.SSS}%c%M%L%thread%m<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- root logger 配置 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ALL<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>console<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>htmlFile<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行之后发现在控制台打印出红色字体的日志信息，在<code>/log</code>文件下有<code>logback.log</code>和<code>logback.html</code>两个日志文件，在项目中一般都只会使用<code>.log</code>结尾的日志的。</p><p><strong>阿狸：</strong> 奥，你就是通过这个文件找到的吧，那每天都产生这么多行日志，找起来不是太费劲了吗？另外文件太大，打开都很费劲呀。</p><p><strong>阿Q：</strong> 当然了，请接着往下看</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 日志拆分和归档压缩的 appender --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rollFile<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 日志文件保存路径（拆分的话此处可以省略） --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>\${log_dir}/roll_logback.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 日志消息格式配置--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.encoder.PatternLayoutEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>\${pattern}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 指定拆分规则 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 每满1M或者 每秒 产生一个新文件，%i产生0 或者 1 的文件名 ，gz为压缩，
        我们一般设置为每天产生一个文件%d{yyyy-MM-dd} --&gt;</span>
        <span class="token comment">&lt;!-- 按照文件大小拆分 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">&gt;</span></span>1MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 按照时间和压缩格式声明拆分的文件名 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>\${log_dir}/rolling.%d{yyyy-MM-dd-HH-mm-ss}.log%i.gz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时我们对测试程序加上<code>for</code>循环，循环<code>1w</code>次，发现每秒或者每超过<code>1M</code>都会产生新的文件。当然也可以在<code>appender</code>下增加过滤器，过滤需要的日志级别。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!-- 日志级别过滤器 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.filter.LevelFilter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 日志过滤规则 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>level</span><span class="token punctuation">&gt;</span></span>ERROR<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>level</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 匹配时的操作：接收（记录） --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMatch</span><span class="token punctuation">&gt;</span></span>ACCEPT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMatch</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 不匹配时的操作：拒绝（不记录） --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>onMismatch</span><span class="token punctuation">&gt;</span></span>DENY<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>onMismatch</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>阿狸：</strong> 这样就清晰多了，那你上边提到的那个分文件的策略是怎么发现的呢？能跟我说一下你的依据吗？</p><p><strong>阿Q：</strong> 好的，那就来几张图感受一下吧</p><ol><li>先打开<code>RollingFileAppender</code>,可以看到他底下有个<code>RollingPolicy</code>策略</li></ol><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a7d875e29125438b97eab0de9529ed93~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>点进去发现它是一个接口，然后看一下它的实现类，我们找到<code>SizeAndTimeBasedRollingPolicy</code>策略看一下</li></ol><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e70eca81f01044cfb0ca8b144f334925~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>3.发现这个类里边就有文件大小的属性<code>maxFileSize</code>，却没有找到按照时间份文件的属性，我们进入它的父类<code>TimeBasedRollingPolicy</code>查看</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7ad9b5da102a47b39e2ccdf37a160bf1~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>4.发现里边就有该属性，翻译一下：必须在使用<code>TimeBasedRollingPolicy</code>之前设置<code>FileNamePattern</code>选项</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/230531c9662947e7bce05ca7f86e12ba~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>阿狸：</strong> 我还有一个问题，就是系统在执行时还要完成打印日志的工作，它的效率会不会很低呀？</p><p><strong>阿Q：</strong> 不会的，为了提高性能，它还支持异步输出日志，这样就可以大大提高性能了。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 异步日志 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>async<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.AsyncAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 指定具体的appender --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rollFile<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了上边用到的<code>root</code>，还支持自定义的<code>logger</code>呢。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 自定义logger对象
  additivity=&quot;false&quot; 自定义的logger 对象是否继承root logger
  name 用来指定受此loger约束的某一个包或者具体的某一个类
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.aq.logback<span class="token punctuation">&quot;</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>console<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logger</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="springboot中使用" tabindex="-1"><a class="header-anchor" href="#springboot中使用" aria-hidden="true">#</a> SpringBoot中使用</h4><p><strong>阿狸：</strong> 说到这我想起来了，你说的是普通的<code>maven</code>项目，那常用的<code>SpringBoot</code>项目也是这样使用吗？</p><p><strong>阿Q：</strong> 如果是<code>SpringBoot</code>项目的话，它默认使用<code>slf4j</code>作为日志门面，<code>logback</code>作为日志实现来记录日志,所以我们不需要引入任何依赖，默认是<code>info</code>级别。 <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/00050900c8b948308ebb4f2e1d5cb899~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p><p>我们还可以直接使用<code>@Slf4j</code>的注解来代替上边的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">TestLogBack</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>引用是使用<code>log.info(&quot;info&quot;);</code>来实现。它的默认加载顺序是<code>logback-spring.xml</code>-&gt;<code>logback.xml</code></p><p>我们可以在<code>application.properties</code>中简单配置</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment">#指定自定义 logger 对象的日志级别</span>
<span class="token key attr-name">logging.level.com.itzyq.sblogback</span><span class="token punctuation">=</span><span class="token value attr-value">trace</span>

<span class="token comment">#指定控制台输出消息格式</span>
<span class="token key attr-name">logging.pattern.console</span><span class="token punctuation">=</span><span class="token value attr-value">[%-5level] %d{yyyy-MM-dd HH:mm:ss} %c [%thread] ===== %m %n</span>

<span class="token comment">#指定存放日志文件的具体路径(已经弃用)</span>
<span class="token comment">#logging.file=/logs/springboot.log</span>
<span class="token comment">#指定日志文件存放的目录，默认的文件名为spring.log</span>
<span class="token key attr-name">logging.file.path</span><span class="token punctuation">=</span><span class="token value attr-value">/logs/springboot/</span>
<span class="token comment">#指定日志文件的消息格式</span>
<span class="token key attr-name">logging.pattern.file</span><span class="token punctuation">=</span><span class="token value attr-value">[%-5level] %d{yyyy-MM-dd HH:mm:ss} %c [%thread] ===== %m %n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为在<code>properties</code>中配置功能有限，我们还是使用上文中的<code>logback.xml</code>来配置。</p><p><strong>阿狸：</strong> 艾，那为啥不使用<code>logback-spring.xml</code>呢？</p><p><strong>阿Q：</strong> <code>SpringBoot</code>中是推荐使用<code>logback-spring.xml</code>的，因为上文中是普通的<code>maven</code>项目，为了好理解就搞成<code>logback.xml</code>了。</p><blockquote><p><code>logback-spring.xml</code>只有在<code>Spring</code>应用程序运行的时候才生效，即带有<code>@SpringBootApplication</code>注解的类启动的时候才会生效。这里我们完全可以使用它。</p></blockquote><p>另外它还有个特殊的功能，可以用来解析日志的配置。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pattern<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %c %M %L [%thread] %m%n<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

    <span class="token comment">&lt;!-- 定义日志文件保存路径属性 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>log_dir<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/logs<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

    <span class="token comment">&lt;!-- 日志文件输出的 appender --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.FileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志文件保存路径 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>\${log_dir}/logback.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- 日志消息格式配置--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.classic.encoder.PatternLayoutEncoder<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>\${pattern}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>springProfile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pro<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span> %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %m%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>springProfile</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时在<code>application.properties</code>中引入<code>spring.profiles.active=dev</code>或者<code>pro</code>可以切换测试和正式环境了，是不是很方便呀。</p><h3 id="logback-access" tabindex="-1"><a class="header-anchor" href="#logback-access" aria-hidden="true">#</a> Logback-access</h3><p><strong>阿狸：</strong> 确实是，那既然都说到这了，你能说下上边提到的<code>logback-access</code>吗？</p><p><strong>阿Q：</strong> 好吧，那我就大体说一下它的配置和使用吧：<code>logback-access</code>模块与<code>Servlet</code>容器（如<code>Tomcat</code>和<code>jetty</code>）集成，已提供<code>HTTP</code>访问日志功能。我们可以使用<code>logback-access</code>模块来替换<code>tomcat</code>的访问日志;</p><ol><li><p>将<code>logback-access.jar</code>与<code>logback-core.jar</code> 复制到<code>$TOMCAT_HOME/lib/</code>（安装 <code>Tomcat</code> 的文件夹）目录下；</p></li><li><p>修改<code>$TOMCAT_HOME/conf/server.xml</code>中的<code>Host</code>元素中添加：</p></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token class-name">Value</span> className<span class="token operator">=</span><span class="token string">&quot;ch.qos.logback.access.tomcat.LogbackValue&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这一行通常嵌套在一个<code>&lt;Engine&gt;</code> 或 <code>&lt;Host&gt;</code>元素中。</p><ol start="3"><li><code>logback</code> 默认会在<code>$TOMCAT_HOME/conf</code>下查找文件<code>logback-access.xml</code>，该配置的官方地址：<code>http://logback.qos.ch/access.html#configuration</code></li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- always a good activate OnConsoleStatusListener --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>statusListener</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.status.OnConsoleStatusListener<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>  

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>access.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>access.%d{yyyy-MM-dd}.log.zip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span>
      <span class="token comment">&lt;!-- 日志消息表达格式 --&gt;</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%h %l %u [%t] &quot;%r&quot; %s %b &quot;%i{Referer}&quot; “%i{User-Agent}”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>combined<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span>
 
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置信息补充" tabindex="-1"><a class="header-anchor" href="#配置信息补充" aria-hidden="true">#</a> 配置信息补充</h3><p><strong>阿狸：</strong> 讲到这就结束了吗？</p><p><strong>阿Q：</strong> 因为<code>logback</code>的配置信息在上文中难以全部展示，特将具体的配置信息列出来，供大家参考学习。</p><p>（1）根节点<code>configuration</code>，包含下面三个属性：</p><ul><li>scan: 当此属性设置为<code>true</code>时，配置文件如果发生改变，将会被重新加载，默认值为<code>true</code>。</li><li>scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当<code>scan</code>为<code>true</code>时，此属性生效。默认的时间间隔为1分钟。</li><li>debug: 当此属性设置为<code>true</code>时，将打印出<code>logback</code>内部日志信息，实时查看<code>logback</code>运行状态。默认值为<code>false</code>。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;60 seconds&quot; debug=&quot;false&quot;&gt; 
&lt;/configuration&gt;　
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）<code>contextName</code>：用来设置上下文名称，每个<code>logger</code>都关联到<code>logger</code>上下文，默认上下文名称为<code>default</code>。但可以使用<code>contextName</code>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;60 seconds&quot; debug=&quot;false&quot;&gt; 
     &lt;contextName&gt;myAppName&lt;/contextName&gt; 
  &lt;/configuration&gt;    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(3) <code>property</code> ：用来定义变量值，它有两个属性<code>name</code>和<code>value</code>，通过<code>property</code>定义的值会被插入到<code>logger</code>上下文中，可以使“\${}”来使用变量。</p><ul><li><code>name</code>: 变量的名称</li><li><code>value</code>: 的值时变量定义的值</li></ul><p>(4) <code>timestamp</code>：获取时间戳字符串，他有两个属性<code>key</code>和<code>datePattern</code></p><ul><li><code>key</code>: 标识此<code>timestamp</code>的名字；</li><li><code>datePattern</code>: 设置将当前时间（解析配置文件的时间）转换为字符串的模式，遵循<code>java.txt.SimpleDateFormat</code>的格式。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;60 seconds&quot; debug=&quot;false&quot;&gt; 
    &lt;timestamp key=&quot;bySecond&quot; datePattern=&quot;yyyyMMdd&#39;T&#39;HHmmss&quot;/&gt; 
&lt;/configuration&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（5）<code>appender</code>：负责写日志的组件，它有两个必要属性<code>name</code>和<code>class</code>。<code>name</code>指定<code>appender</code>名称，<code>class</code>指定<code>appender</code>的全限定名</p><p>5.1、<code>ConsoleAppender</code> 把日志输出到控制台，有以下子节点：</p><ul><li><code>encoder</code>：对日志进行格式化。</li><li><code>target</code>：字符串<code>System.out</code>(默认)或者<code>System.err</code></li></ul><p>5.2、<code>FileAppender</code>：把日志添加到文件，有以下子节点：</p><ul><li><code>file</code>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。</li><li><code>append</code>：如果是 <code>true</code>，日志被追加到文件结尾，如果是 <code>false</code>，清空现存文件，默认是<code>true</code>。</li><li><code>encoder</code>：对记录事件进行格式化。</li><li><code>prudent</code>：如果是 <code>true</code>，日志会被安全的写入文件，即使其他的<code>FileAppender</code>也在向此文件做写入操作，效率低，默认是 <code>false</code>。</li></ul><p>5.3、<code>RollingFileAppender</code>：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。有以下子节点：</p><ul><li><code>file</code>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。</li><li><code>append</code>：如果是 <code>true</code>，日志被追加到文件结尾，如果是 <code>false</code>，清空现存文件，默认是<code>true</code>。</li><li><code>rollingPolicy</code>:当发生滚动时，决定<code>RollingFileAppender</code>的行为，涉及文件移动和重命名。属性<code>class</code>定义具体的滚动策略类。</li></ul><p>5.4、策略： <strong>class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;：</strong> 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责触发滚动。 有以下子节点：</p><ul><li><code>fileNamePattern</code>：必要节点，包含文件名及“%d”转换符，<code>“%d”</code>可以包含一个<code>java.text.SimpleDateFormat</code>指定的时间格式，如：<code>%d{yyyy-MM}</code>。如果直接使用 <code>%d</code>，默认格式是 <code>yyyy-MM-dd</code>。</li><li><code>RollingFileAppender</code>的<code>file</code>子节点可有可无，通过设置<code>file</code>，可以为活动文件和归档文件指定不同位置，当前日志总是记录到<code>file</code>指定的文件（活动文件），活动文件的名字不会改变；如果没设置<code>file</code>，活动文件的名字会根据<code>fileNamePattern</code> 的值，每隔一段时间改变一次。“/”或者“\\”会被当做目录分隔符。</li><li><code>maxHistory</code>:可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。 假设设置每个月滚动，且<code>&lt;maxHistory&gt;</code>是6，则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件时，那些为了归档而创建的目录也会被删除。</li></ul><p><strong>class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;：</strong> 查看当前活动文件的大小，如果超过指定大小会告知<code>RollingFileAppender</code> 触发当前活动文件滚动。只有一个节点:</p><ul><li><code>maxFileSize</code>:这是活动文件的大小，默认值是<code>10MB</code>。</li><li><code>prudent</code>：当为<code>true</code>时，不支持<code>FixedWindowRollingPolicy</code>。支持<code>TimeBasedRollingPolicy</code>，但是有两个限制，1不支持也不允许文件压缩，2不能设置<code>file</code>属性，必须留空。</li><li><code>triggeringPolicy</code>: 告知 <code>RollingFileAppender</code> 合适激活滚动。</li></ul><p><strong>class=&quot;ch.qos.logback.core.rolling.FixedWindowRollingPolicy&quot;</strong> 根据固定窗口算法重命名文件的滚动策略。有以下子节点：</p><ul><li><code>minIndex</code>:窗口索引最小值</li><li><code>maxIndex</code>:窗口索引最大值，当用户指定的窗口过大时，会自动将窗口设置为12。</li><li><code>fileNamePattern</code>:必须包含<code>“%i”</code>例如，假设最小值和最大值分别为1和2，命名模式为 <code>mylog%i.log</code>,会产生归档文件<code>mylog1.log</code>和<code>mylog2.log</code>。还可以指定文件压缩选项，例如，<code>mylog%i.log.gz</code> 或者 没有<code>log%i.log.zip</code></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span> 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.TimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>logFile.%d{yyyy-MM-dd}.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxHistory</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxHistory</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%-4relative [%thread] %-5level %logger{35} - %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span> 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span> 

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DEBUG<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
   //上述配置表示每天生成一个日志文件，保存30天的日志文件。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span> 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>test.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span> 

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.FixedWindowRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>tests.%i.log.zip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>minIndex</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>minIndex</span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxIndex</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxIndex</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span> 

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>triggeringPolicy</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">&gt;</span></span>5MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>triggeringPolicy</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span> 
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%-4relative [%thread] %-5level %logger{35} - %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span> 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span> 

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DEBUG<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
    //上述配置表示按照固定窗口模式生成日志文件，当文件大于5MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>encoder</code>：对记录事件进行格式化。负责两件事，一是把日志信息转换成字节数组，二是把字节数组写入到输出流。</p><p><code>PatternLayoutEncoder</code> 是唯一有用的且默认的<code>encoder</code> ，有一个<code>pattern</code>节点，用来设置日志的输入格式。使用<code>“%”</code>加“转换符”方式，如果要输出<code>“%”</code>，则必须用<code>“\\”</code>对<code>“\\%”</code>进行转义。</p><p>（6）子节点<code>logger</code>：用来设置某一个包或具体的某一个类的日志打印级别、以及指定<code>appender</code>。仅有一个<code>name</code>属性，一个可选的<code>level</code>和一个可选的<code>additivity</code>（<strong>单词一定要注意写对，好多地方都写成了addtivity</strong>）属性。可以包含零个或多个<code>&lt;appender-ref&gt;</code>元素，标识这个<code>appender</code>将会添加到这个<code>logger</code></p><ul><li>name：用来指定受此 <code>logger</code> 约束的某一个包或者具体的某一个类；</li><li>level：用来设置打印级别（日志级别），大小写无关：<code>TRACE</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, <code>ERROR</code>, <code>ALL</code> 和 <code>OFF</code>，还有一个特俗值<code>INHERITED</code>或者同义词<code>NULL</code>，代表强制执行上级的级别。如果未设置此属性，那么当前 <code>logger</code> 将会继承上级的级别。</li><li>additivity:是否向上级<code>loger</code>传递打印信息。默认是<code>true</code>。</li></ul><p>（7）子节点<code>root</code>：它也是<code>logger</code>元素，但是它是根 <code>logger</code> ,是所有<code>logger</code>的上级。只有一个<code>level</code>属性，因为<code>name</code>已经被命名为<code>&quot;root&quot;</code>，且已经是最上级了。同<code>logger</code>一样，可以包含零个或多个<code>appender-ref</code>元素，标识这个<code>appender</code>将会添加到这个<code>logger</code>。</p><ul><li><code>level</code>: 用来设置打印级别，大小写无关：<code>TRACE</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, <code>ERROR</code>, <code>ALL</code>和<code>OFF</code>，不能设置为<code>INHERITED</code>或者同义词<code>NULL</code>。 默认是<code>DEBUG</code></li></ul><p>常用<code>logger</code>配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code> &lt;<span class="token tag">!--</span> show parameters for hibernate sql 专为 Hibernate 定制 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span>
&lt;logger name=&quot;org.hibernate.type.descriptor.sql.BasicBinder&quot; level=&quot;TRACE&quot; /<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;org.hibernate.type.descriptor.sql.BasicExtractor&quot; level=&quot;DEBUG&quot; /<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;org.hibernate.SQL&quot; level=&quot;DEBUG&quot; /<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;org.hibernate.engine.QueryParameters&quot; level=&quot;DEBUG&quot; /<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;org.hibernate.engine.query.HQLQueryPlan&quot; level=&quot;DEBUG&quot; /<span class="token punctuation">&gt;</span>

&lt;<span class="token tag">!--myibatis</span> log configure<span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span>
&lt;logger name=&quot;com.apache.ibatis&quot; level=&quot;TRACE&quot;/<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;java.sql.Connection&quot; level=&quot;DEBUG&quot;/<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;java.sql.Statement&quot; level=&quot;DEBUG&quot;/<span class="token punctuation">&gt;</span>
&lt;logger name=&quot;java.sql.PreparedStatement&quot; level=&quot;DEBUG&quot;/<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>阿狸：</strong> 老公你也太贴心了，我也要用起来，记录美好的生活！</p>`,98);function k(g,v){const t=l("ExternalLinkIcon");return o(),p("div",null,[u,a("p",null,[n("接着奉上"),a("a",d,[n("官网地址"),c(t)]),n("，它分为以下三个模块：")]),r])}const b=e(i,[["render",k],["__file","logback.html.vue"]]);export{b as default};
